

Title
=================================
Software Engineering for Internet of Things

Titre
=================================
Ingénierie logicielle pour l'Internet des Objets



Résumé
=================================

Les logiciels tendent à se doter de facultés de progression. Tout au long de leur vie, ils peuvent évoluer; s'enrichissent de fonctionalités, perfectionnent leurs comportements (corrections d'erreurs), couvrent une palette de besoin plus grande. De plus en plus ils peuvent s'adapter; aux caprices des utilisateurs, à leurs capacités aussi; à des changement dans le monde qui les entour ou dans les ressources mises à leur disposition. Ainsi, ils offrent à chaque instant une réponse adaptée aux besoins exprimés et aux ressources disponibles. Ils cherchent à s'ouvrir; à l'utilisateur final qui peut personaliser son logiciel, voir fabriquer lui même ses applications; à des contributions extérieurs, rendant la solution globale plus riche, et plus perenne.
Mais ces capacités ont un coût. L'évolutivité, l'adaptation durant l'exécution ou l'ouverture, sont source d'un besoin fort de flexibilité, de variabilité des logiciels considérés. Des nouveaux outils sont nécessaires pour assister la fabrication de ces nouveaux logiciels; de la gestion de la variabilité au design, à la grande flexibilité et dynamicité de l'environnement d'exécution.
En électronique, des outils offrent aujourd'hui la possibilité de trouver un composant précis dans un ensemble fourni et varié; de faire évoluer ou d'adapter des solutions en fonction de nouvelles avancées ou de la disponibilité de nouvelles technologies. L'ouverture dans ce même domaine a engendré une grande richesse de solutions issues de bricoleurs ou d'industriels, et la capacité de réparer, renouveler des matériels qui auraient été perdus sinon.
La proposition faite dans cette thèse, est de tirer parti des solutions trouvées en électonique, afin d'améliorer la flexibilité des logiciels tout en conservant un haut niveau de fiabilité. A cette fin, cette thèse contribue à trois niveaux.
 - La définition d'un modèle de composants relaché, qui génère une grande flexibilité et offre les moyens de connecter des composants hétérogènes, tout en offrant des moyens de contrôle et vérification de cohérence
 - Des outils issus de l'ingénierie des modèles, pour créer et modifier des assemblages de composants, simuler et valider leurs structure et comportement avant leur (re-)déploiement
 - Un environement d'exécution bati sur une architecture à base de services, pour supporter l'exécution du modèle de composant proposé en garantissant des propriétés d'évolutivité, d'adaptabilité et d'ouverture.
 Cette proposition a été considérée dans un contexte d'aide à domicile pour personnes agées ou dépendantes. En effet, chaque personne ayant des besoins et des évolutions différents, les solutions techniques proposées se doivent d'être adaptées et flexibles. Bien qu'encore beaucoup de chemin reste à parcourir, les bénéfices retirés de l'utilisation de cette approche dans ce contexte ont permis de valider la proposition.

Summary
=================================

Softwares tend to adopt progress faculties. During their lives, they can evolve; get enriched with new functionalities, improve their behavior (correction of errors), cover a largest range of needs. More and more they can adapt; to user's whims, to their abilities as well; to changes in the world around them or in ressources at their disposal. Thus, they do provide at any time, an accurate answer to current needs and available resources. They are opening; to the final user who can customize its software, even create application by himself; to external contributions, making the global solution richer and more lasting.
But these capabilities come with a cost. Evolutivity, adaptations at runtime or opening are sources of a strong need for flexibility and dynamicity of the execution environment.
In electronics, tools now offer solutions to find a specific component in a huge and heterogenous set, to make products evolve and adapt to new advances or the availability of new technology. Opening in this area has produced a wealth of solutions made by big industrials or individuals, and helped in repair or renew of materials that would have been lost otherwise.
The proposal of this thesis is to leverage the solutions found in electonics, to improve the flexibility of sofwares while maintaining a high level of reliability. To this end, this thesis contributes to three levels:
 - The definition of a relaxed component model, which improves the flexibility, provide means to connect heterogenous components and offers ways to verify and check the consistency
 - Tools from model driven engineering domain, to create and edit component assemblies, simulate and validate their structure and behavior prior to their (re-)deployment
 - A runtime environment built over a service-based architecture, to support the implementation of the component model proposed by ensuring evolutivity, adaptability and openness.
 This proposal was considered in the context of  home care for elderly or dependent. Indeed, as long as each person has different needs, requirements and evolutions, each technical solution have to be adapted and flexible. Although there still a long way to go, the benefits gained by the use of this approach in this context made the validation of the proposition.





Publications
=================================

Using MDE to Build a Schisophrenic Middleware for Home/Building Automation
  Grégory NAIN, Olivier BARAIS, Erwan DAUBERT, Jean-Marc JEZEQUEL
  In ServiceWave'08: Networked European Software & Services Initiative (NESSI) Conference, December 2008, Madrid, Spain
  Acceptance Rate: 26%
  
EntiMid : un middleware aux services de la maison
  Grégory Nain, Olivier Barais, Régis Fleurquin, Jean-Marc Jézéquel
  In Conférence francophone sur les architectures logicielles : CAL 2009, March 2009, Nancy, France
  
Taming Dynamically Adaptive Systems with Models and Aspects.
  Brice Morin, Olivier Barais, Grégory Nain, Jean-Marc Jézéquel
  In 31st International Conference on Software Engineering (ICSE'09), Vancouver, Canada, May 2009.
  Acceptance Rate: 12%

Dynamic Software Product Lines for Service-Based Systems
  Paul Istoan, Grégory Nain, Gilles Perrouin, Jean-Marc Jézéquel
  In 9th IEEE International Conference on Computer and Information Technology, Xiamen, China, Oct 2009.
  Acceptance Rate: 22%

Leveraging Models From Design-time to Runtime. A Live Demo.
  Brice Morin, Grégory Nain, Olivier Barais, and Jean-Marc Jézéquel.
  In 4th International Workshop on Models@Run.Time (at MODELS'09), Denver, Colorado, USA, Oct 2009.

Integrating IOT and IOS with a component-based approach.
  Grégory Nain, François Fouquet, Brice Morin, Olivier Barais, and Jean-Marc Jézéquel.
  In Procedings of the 36th EUROMICRO Conference on Software Engineering and Advanced Applications (SEAA 2010), Lille, France, 2010.

F4plan: An approach to build efficient adaptation plans.
  Francoise André, Erwan Daubert, Grégory Nain, Brice Morin, and Olivier Barais.
  In MobiQuitous. ACM, 2010.

Combining Aspect-Oriented Modeling with Property-Based Reasoning to Improve User Interface Adaptation
  Arnaud Blouin, Brice Morin, Olivier Beaudoux, Grégory Nain, Patrick Albers and Jean-Marc Jézéquel
  EICS'11: Proceedings of the 3rd ACM SIGCHI symposium on Engineering interactive computing systems



TimeLine
=================================

Du Vendredi   1 au   8  Juillet :              Dépot du dossier de soutenance à l'ED
Du Vendredi 22 au 29 Juillet :              Dépot d'1 exeplaire de thèse + Formulaire d'enregistrement + Résumés. Conditionné par la date de fermeture de l'école.
Du Vendredi 22 au 29 Juillet :              Envoi de la thèse aux rapporteurs
Du Vendredi    2 au  9  Septembre :    Retour des rapports, Dépot à MATISSE, Dépot des formulaires à la Bibliothèque
Vendredi 7 ou Vendredi 14 Octobre : Soutenance





